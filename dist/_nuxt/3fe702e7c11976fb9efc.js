(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{181:function(e,t,o){"use strict";var r={name:"Up",props:["url"]},n=o(27),component=Object(n.a)(r,function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("b-row",[t("b-col",{staticClass:"mt-3"},[t("b-button",{attrs:{variant:"light",href:this.url}},[t("font-awesome-icon",{attrs:{icon:["fas","chevron-left"]}}),this._v(" Back\n      ")],1)],1)],1)],1)},[],!1,null,null,null);t.a=component.exports},182:function(e,t,o){"use strict";o(22);var r={name:"Nomenclature",props:{items:{type:Object}},methods:{create_item_spacing:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return e+":"+t},split_examples:function(e){return e.split(" ")}}},n=o(27),component=Object(n.a)(r,function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",[o("b-list-group",[o("b-list-group-item",[e._v("\n      A name should be written using only PascalCase, that is, instead of using spaces, we convert into uppercase the first letter in the name.\n      For example:\n      "),o("b",[e._v('"teapot steaming"')]),e._v(", should be written as\n      "),o("b",[e._v("TeapotSteaming.")])]),e._v(" "),o("b-list-group-item",[e._v('Every new field in the naming should be separated with underscore "_", do not use spaces or any other sign.')]),e._v(" "),o("b-list-group-item",[e._v("Whenever in doubt, ask the technical director for help on how to correctly name your files.")]),e._v(" "),o("b-list-group-item",[e._v("\n      It is important that the version name of the file match the version name of the folder they will be placed,\n      for example, files with _v001 version name, should be placed inside v001 folder.\n    ")]),e._v(" "),o("b-list-group-item",[e._v("\n      The file code, name and version are very important. Naming files correctly will help other artist\n      to quickly validate from within their scene whether or not they are working with the correct data.\n    ")])],1),e._v(" "),o("b-list-group",e._l(e.items,function(t){return o("div",{key:t.id,attrs:{items:e.items}},[o("div",{style:e.create_item_spacing(t.spacing.direction,t.spacing.amount)},[o("b-list-group-item",{staticClass:"flex-column align-items-start mt-2 inputs-outputs-list-item",style:t.color.style,attrs:{href:"#",active:""}},[o("b-row",{attrs:{"align-v":"center"}},[o("b-col",{staticClass:"mt-1",attrs:{cols:"11"}},[o("h4",{domProps:{innerHTML:e._s(t.type)}}),e._v(" "),o("p",{domProps:{innerHTML:e._s(t.prefix+t.name+t.suffix+t.node)}}),e._v(" "),o("p",[e._v("Examples:")]),e._v(" "),o("b-list-group",{attrs:{horizontal:""}},e._l(e.split_examples(t.example),function(t){return o("div",{key:t.id},[o("b-list-group-item",{staticClass:"m-1",staticStyle:{background:"rgb(100,100,100)"}},[e._v(e._s(t))])],1)}),0),e._v(" "),""!=t.description?o("div",{staticClass:"mt-3"},[o("i",[e._v(e._s(t.description))])]):e._e()],1)],1)],1)],1)])}),0),e._v(" "),o("h5",{staticClass:"my-3 text-center"},[o("b",[e._v("\n      For more information about nodes naming, plese refer to the\n      "),o("nuxt-link",{staticClass:"btn-info p-2",attrs:{to:"/pipeline/nomenclatures"}},[o("b",[e._v("naming conventions section.")])])],1)])],1)},[],!1,null,null,null);t.a=component.exports},200:function(e,t,o){"use strict";o.r(t);var r=o(181),n=o(182),l={components:{Back:r.a,Nomenclature:n.a},data:function(){return{title:"<h1>Rigging</h1>",description:"<p>\n            Every assets that will have to be animated with the keyframe method, should be correctly configured\n            to do so. This department is in charge of the setup of such assets that could be as simple as a prop \n            or as complex as a full CG character.\n      </p>",structure_description:"\n          <h3>Structure</h3>\n          <p class=\"text-justify\">\n            Rigging fundamental traits are:<br>\n            - The setup must allow the animators to create the desired motion described by the creative department and storyboard.<br>\n            - Every node in the setup should follows naming conventions.<br>\n            - Clear and clean rigging setups are a must. Avoid convoluted systems using visibility filters if necessary.<br>\n            - Before start, make sure every model provided follows naming conventions, every rigger should know by heart the \n            <a href='/pipeline/assets/modeling'>modeling naming conventions.</a><br>\n            - Every system should be tested for performance before being used by the animation department.<br>\n            - The asset must be at the {0,0,0} world coordinate.\n          </p>\n      ",image:"https://forums.newtek.com/attachment.php?attachmentid=104940&d=1339184728",structure:["For every pipeline step in a shot, there will always be a <b>Playground</b> and <b>Publish</b> folders.\n        ","The <b>Playground</b> folder contains sub folders with the name of the <b>users</b> in the studio, here \n        you will find the folder that belongs to you, inside this folder you can work before publish.\n        If you are a freelancer, you can work directly in the root of the <i>Playground</i> folder.\n        ",'The <b>Publish</b> folder contains sub folders with the current version that has being sent to revision.\n        you should create a new folder for every new publish you send, for example: "v001", "v002", "v003", etc.<br>\n        ',"The <b>Publish</b> folder contains the data described below in the <b>Outputs</b> section.<br>\n        ","\n        Just create the necesary groups to organize the assets on your scene.\n        "],inputs:{actions:{title:"Actions:",description:" \n            <ul>\n              <li>Storyboard.</li>\n              <li>Previs or animatic video.</li>\n            </ul>\n            "},characters:{title:"For Characters:",description:" \n          <ul>\n              <li>Object file (.obj).</li>\n              <li>Scale guide.</li>\n              <li>Concept art.</li>\n              <li>Expression sheets.</li>\n           </ul>\n           "},props:{title:"For Props:",description:" \n            <ul>\n              <li>Object file (.obj).</li>\n              <li>Motion guide sheets if necessary.</li>\n            </ul>\n            "}},outputs:{scene:{title:"Scene",description:"<p>\n            Clean scene file from the software where the model was created -> NO shaders, layers or unused nodes.<br>\n            Each and every single node should be correctly named: mesh, controls, utility nodes, etc.\n          </p>"}},nomenclature:{container:{type:"Rig Container Group",prefix:"",name:"Asset name",suffix:"",node:" | GRP",example:"Pikachu_GRP Charmander_GRP Bulbasaur_GRP",description:"Nothing should be outside this group, when the scene is opened, this is the only thing visible in the outliner.",spacing:{direction:"margin-left",amount:"0vw"},color:{style:"background-color: rgb(40, 40, 40)"}},global:{type:"Global Controller",prefix:"",name:"Global",suffix:"",node:" | CTL",example:"Global_CTL",description:'It should be inside a group named "Global_GRP"',spacing:{direction:"margin-left",amount:"2vw"},color:{style:"background-color: rgb(40, 40, 40)"}},main:{type:"Main Controller",prefix:"",name:"Main",suffix:"",node:" | CTL",example:"Main_CTL",description:'This controller lives inside the global controller and should be inside a group called "Main_GRP"',spacing:{direction:"margin-left",amount:"4vw"},color:{style:"background-color: rgb(40, 40, 40)"}},geometry:{type:"Geometry Group",prefix:"",name:"Geometry",suffix:"",node:" | GRP",example:"Geometry_GRP",description:'This group lives inside the "Main_CTL" controller and holds the asset geometry.',spacing:{direction:"margin-left",amount:"6vw"},color:{style:"background-color: rgb(40, 40, 40)"}},rig:{type:"Rig Group",prefix:"",name:"Rig",suffix:"",node:" | GRP",example:"Rig_GRP",description:'This group lives inside the "Main_CTL" controller and holds the rigging setup groups.',spacing:{direction:"margin-left",amount:"6vw"},color:{style:"background-color: rgb(40, 40, 40)"}},single_contollers:{type:"Controllers (single)",prefix:'"L" for left, "R" for right and "M" for middle',name:" | Control name in PascalCase + IK or FK if required.",suffix:"",node:" | CTL",example:"M_Head_CTL R_Shoulder_CTL L_HandIK_CTL",description:'Always use "M" for assets that don\'t have a right or left side.',spacing:{direction:"margin-left",amount:"8vw"},color:{style:"background-color: rgb(60, 60, 60)"}},multiple_controllers:{type:"Controllers (multiple)",prefix:'"L" for left, "R" for right and "M" for middle',name:" | Control name in PascalCase",suffix:"| Number",node:" | CTL",example:"M_Tail_01_CTL M_Tail_02_CTL M_Tail_03_CTL",description:'Always use "M" for assets that don\'t have a right or left side.',spacing:{direction:"margin-left",amount:"8vw"},color:{style:"background-color: rgb(60, 60, 60)"}},single_groups:{type:"Groups or Nulls (single)",prefix:'"L" for left, "R" for right and "M" for middle',name:" | Asset name in PascalCase",suffix:"",node:" | GRP",example:"M_TeapotSteaming_GRP",description:'Always use "M" for assets that don\'t have a right or left side.',spacing:{direction:"margin-left",amount:"8vw"},color:{style:"background-color: rgb(30, 30, 30)"}},multiple_groups:{type:"Groups or Nulls (multiple)",prefix:'"L" for left, "R" for right and "M" for middle',name:" | Asset name in PascalCase",suffix:" | Number",node:" | GRP",example:"M_Screw_01_GRP M_Screw_02_GRP M_Screw_03_GRP",description:'Always use "M" for assets that don\'t have a right or left side.',spacing:{direction:"margin-left",amount:"8vw"},color:{style:"background-color: rgb(30, 30, 30)"}},single_joints:{type:"Joints (single)",prefix:'"L" for left, "R" for right and "M" for middle',name:" | Joint name in PascalCase + IK or FK if required.",suffix:"",node:" | JNT",example:"M_Femur_JNT L_FemurIK_JNT L_FemurFK_JNT",description:'Always use "M" for assets that don\'t have a right or left side.',spacing:{direction:"margin-left",amount:"8vw"},color:{style:"background-color: rgb(60,60,60)"}},multiple_joints:{type:"Joints (multiple)",prefix:'"L" for left, "R" for right and "M" for middle',name:" | Joint name in PascalCase + IK or FK if required.",suffix:" | Number",node:" | JNT",example:"M_SpineRibbon_01_JNT M_SpineRibbon_02_JNT M_SpineRibbon_03_JNT",description:'Always use "M" for assets that don\'t have a right or left side.',spacing:{direction:"margin-left",amount:"8vw"},color:{style:"background-color: rgb(60,60,60)"}},single_curves:{type:"Curve (single)",prefix:'"L" for left, "R" for right and "M" for middle',name:" | Asset name in PascalCase",suffix:"",node:" | CRV",example:"M_SpineWire_CRV",description:'Always use "M" for assets that don\'t have a right or left side.',spacing:{direction:"margin-left",amount:"8vw"},color:{style:"background-color: rgb(30, 30, 30)"}},multiple_curves:{type:"Curves (multiple)",prefix:'"L" for left, "R" for right and "M" for middle',name:" | Asset name in PascalCase",suffix:" | Number",node:" | CRV",example:"M_Spine_01_CRV M_Spine_02_CRV M_Spine_03_CRV",description:'Always use "M" for assets that don\'t have a right or left side.',spacing:{direction:"margin-left",amount:"8vw"},color:{style:"background-color: rgb(30, 30, 30)"}}}}},methods:{sum_one:function(e){return e+1}}},c=o(27),component=Object(c.a)(l,function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",[o("b-container",{staticClass:"mb-5"},[o("Back",{attrs:{url:"/pipeline/assets"}}),e._v(" "),o("b-row",[o("b-col",{attrs:{cols:"6"}},[o("div",{staticClass:"mt-3",domProps:{innerHTML:e._s(e.title)}}),e._v(" "),o("div",{staticClass:"text-justify",domProps:{innerHTML:e._s(e.description)}}),e._v(" "),o("hr"),e._v(" "),o("div",{domProps:{innerHTML:e._s(e.structure_description)}})]),e._v(" "),o("b-col",{staticClass:"mt-3",attrs:{cols:"6"}},[o("b-img",{staticClass:"border border-dark mt-5",attrs:{src:e.image,fluid:"",thumbnail:""}})],1)],1),e._v(" "),o("font-awesome-icon",{directives:[{name:"b-toggle",rawName:"v-b-toggle.collapse-structure",modifiers:{"collapse-structure":!0}}],attrs:{icon:["fas","plus"]}}),e._v(" "),o("b-collapse",{attrs:{id:"collapse-structure"}},[o("b-list-group",e._l(e.structure,function(t,r){return o("div",{key:r},[o("b-list-group-item",{domProps:{innerHTML:e._s(t)}},[e._v(e._s(t))])],1)}),0)],1),e._v(" "),o("hr"),e._v(" "),o("h3",[e._v("Inputs")]),e._v(" "),o("font-awesome-icon",{directives:[{name:"b-toggle",rawName:"v-b-toggle.collapse-inputs",modifiers:{"collapse-inputs":!0}}],attrs:{icon:["fas","plus"]}}),e._v(" "),o("b-collapse",{attrs:{id:"collapse-inputs"}},[o("b-list-group",e._l(e.inputs,function(t,r,n){return o("div",{key:n+1},[o("b-list-group-item",{staticClass:"flex-column align-items-start mt-2",attrs:{href:"#",active:"",variant:"dark"}},[o("b-row",{attrs:{"align-v":"center"}},[o("b-col",{attrs:{cols:"1"}},[o("h2",[e._v(e._s(e.sum_one(n)))])]),e._v(" "),o("b-col",{staticClass:"mt-1",attrs:{cols:"11"}},[o("h4",[e._v(e._s(t.title))]),e._v(" "),o("div",{domProps:{innerHTML:e._s(t.description)}},[e._v(e._s(t.description))])])],1)],1)],1)}),0)],1),e._v(" "),o("hr"),e._v(" "),o("h3",[e._v("Outputs")]),e._v(" "),o("font-awesome-icon",{directives:[{name:"b-toggle",rawName:"v-b-toggle.collapse-outputs",modifiers:{"collapse-outputs":!0}}],attrs:{icon:["fas","plus"]}}),e._v(" "),o("b-collapse",{attrs:{id:"collapse-outputs"}},[o("b-list-group",e._l(e.outputs,function(t,r,n){return o("div",{key:n+1},[o("b-list-group-item",{staticClass:"flex-column align-items-start mt-2 inputs-outputs-list-item",attrs:{href:"#",active:"",variant:"dark"}},[o("b-row",{attrs:{"align-v":"center"}},[o("b-col",{attrs:{cols:"1"}},[o("h2",[e._v(e._s(e.sum_one(n)))])]),e._v(" "),o("b-col",{staticClass:"mt-1",attrs:{cols:"11"}},[o("h4",[e._v(e._s(t.title))]),e._v(" "),o("div",{domProps:{innerHTML:e._s(t.description)}},[e._v(e._s(t.description))])])],1)],1)],1)}),0)],1),e._v(" "),o("hr"),e._v(" "),o("h3",[e._v("Nomenclatures")]),e._v(" "),o("font-awesome-icon",{directives:[{name:"b-toggle",rawName:"v-b-toggle.collapse-nomenclature",modifiers:{"collapse-nomenclature":!0}}],attrs:{icon:["fas","plus"]}}),e._v(" "),o("b-collapse",{attrs:{id:"collapse-nomenclature"}},[o("Nomenclature",{attrs:{items:e.nomenclature}})],1)],1)],1)},[],!1,null,null,null);t.default=component.exports}}]);